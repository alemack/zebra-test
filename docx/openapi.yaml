openapi: 3.0.0
info:
  title: Zebra Backend API
  version: "1.0"
  description: >
    API для управления тендерами. Реализовано на Laravel, авторизация через токен (Sanctum).
servers:
  - url: http://localhost:8000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        email_verified_at:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    Tender:
      type: object
      properties:
        id:
          type: integer
        external_code:
          type: integer
        number:
          type: string
        status:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

security:
  - bearerAuth: []

paths:

  /register:
    post:
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password, password_confirmation]
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
      responses:
        201:
          description: Успешная регистрация
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
                  message:
                    type: string
        422:
          description: Ошибка валидации

  /login:
    post:
      summary: Вход пользователя (получение токена)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: Успешный вход
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: "#/components/schemas/User"
        401:
          description: Неверные данные

  /logout:
    post:
      summary: Выход пользователя (требует авторизации)
      security:
        - bearerAuth: []
      responses:
        200:
          description: Успешный выход

  /user:
    get:
      summary: Получить информацию о текущем пользователе (требует авторизации)
      security:
        - bearerAuth: []
      responses:
        200:
          description: Информация о пользователе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: Не авторизован

  /tenders:
    get:
      summary: Список тендеров (фильтрация по name, date)
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Фильтр по названию
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: Фильтр по дате (YYYY-MM-DD)
      responses:
        200:
          description: Список тендеров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tender"

    post:
      summary: Создать тендер (требует авторизации)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [external_code, number, status, name, updated_at]
              properties:
                external_code:
                  type: integer
                number:
                  type: string
                status:
                  type: string
                name:
                  type: string
                updated_at:
                  type: string
                  format: date-time
      responses:
        201:
          description: Тендер создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tender"
        401:
          description: Не авторизован

  /tenders/{id}:
    get:
      summary: Получить тендер по ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Информация о тендере
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tender"
        404:
          description: Не найден

